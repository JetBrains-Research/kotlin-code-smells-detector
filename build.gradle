buildscript {
    ext.kotlin_version = "${gradle.ext.kotlin_version}"
    repositories {
        maven { url "https://teamcity.jetbrains.com/guestAuth/app/rest/builds/buildType:(id:Kotlin_KotlinPublic_Compiler),number:${gradle.ext.kotlin_version},branch:(default:any)/artifacts/content/maven" }
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap/'}
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev/'}
        def teamcity = ivy {
            url 'https://teamcity.jetbrains.com/guestAuth/'
            patternLayout {

                artifact '/app/rest/builds/id:2911352/artifacts/content/[module]-[revision].[ext]'
            }
            metadataSources { artifact() }
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${gradle.ext.kotlin_version}"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.intellij' version '0.4.18'
}

repositories {
    maven { url "https://teamcity.jetbrains.com/guestAuth/app/rest/builds/buildType:(id:Kotlin_KotlinPublic_Compiler),number:${gradle.ext.kotlin_version},branch:(default:any)/artifacts/content/maven" }
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap/'}
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev/'}
    def teamcity = ivy {
        url 'https://teamcity.jetbrains.com/guestAuth/'
        patternLayout {

            artifact '/app/rest/builds/id:2911352/artifacts/content/[module]-[revision].[ext]'
        }
        metadataSources { artifact() }
    }
    exclusiveContent {
        forRepositories(teamcity)
        filter { includeGroup("jetbrains") }
    }
}

dependencies {
 //   compile "jetbrains:kotlin-plugin:1.4.0-dev-6009-IJ2020.1-Community-1@zip"
 //   implementation "org.jetbrains.kotlin:kotlin-compiler:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}
//
allprojects {
    apply plugin: 'idea'
    apply plugin: 'kotlin'
    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }
}
//
//task unzip(type: Copy) {
//
//    def zipPath = project.configurations.compile.find {it.name.startsWith("kotlin-plugin") }
//    println zipPath
//    def zipFile = file(zipPath)
//    def outputDir = file("${buildDir}")
//
//    from zipTree(zipFile)
//    into outputDir
//}

sourceCompatibility = 1.8

apply plugin: 'java'
apply plugin: 'kotlin'


intellij {
    version '2020.1.1'
    version '2020.1'
    plugins = ['Kotlin', 'java']
    pluginName 'KotlinCodeSmellDetector'
    downloadSources true
    intellij.updateSinceUntilBuild false
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}